
// Quietus menu (based off Contro's ChapterJump hack, with help from Contro and Vesly)
#include "Quietus/ChapterMenu.event"

#include "Quietus/QuietusEvent.event"

#include "Quietus/QuietusMenu.lyn.event"

// Menu option only usable when EID 0x83 is set
ALIGN 4
MyUsabilityRoutine:
#incbin "Quietus/UsabilityRoutine.dmp"

// Skip very begining world map
PUSH
ORG $A39768
EVBIT_MODIFY 0x1
SKIPWN
ENDA
POP

// My hit/avo stuff
PUSH
ORG $2ABB8
jumpToHack(HitRateLabel)
ORG $2ABE8
jumpToHack(AvoidLabel)
POP

ALIGN 4
HitRateLabel:
#incbin "HitAvo/hitratehack.dmp"

ALIGN 4
AvoidLabel:
#incbin "HitAvo/avoidhack.dmp"

// Pik 1RN (modified to only apply <= 50% hit)
//#include "1RNUnder50/Installer.event"

// Teq set/unset condition
#include "SetCondition/FE8-Set Condition.txt"

// Staff experience
PUSH
ORG $2C66A
BL(0x175DC) //gets item might
SHORT 0x1C02 0xE002 //mov r2,r0; b 2C678
POP

// Staff hitrate
// 0x2ccdc is formula location
PUSH
ORG 0x2CD30
//BYTE 0x3034 // 0x34 is 52
BYTE 0x307f // 0x7f is 127
POP

// GetBlueUnitCountASM (sme)
#include "Misc/GetBlueUnitCountASMC.lyn.event"



// Fixed autolevels (stan)
//#include "FixedAutolevels/FixedAutolevels.event"

// Huichelaar minimug palette fix
#include "MinimugPaletteFix/MinimugPalette.event"


// Gamma weight calc
//Moving the weight calc to MSG; makes this save raw AS.

PUSH
ORG $2AB78
SHORT $2016 $5620 $1C21 $315E $8008
B($2ABA4)
SHORT $46C0
POP
PROTECT $2AB78 $2AB88



// Forced deployment

PUSH
ORG 0x8483C
POIN ForceDeployList
POP

#define ForceDeployEntry(unit,chapterID) "SHORT unit; BYTE 0xFF chapterID"
#define EndForceDeploy "SHORT 0xFFFF 0x00"

ForceDeployList:
ForceDeployEntry(Edgar,0xFF)
ForceDeployEntry(Celia,0xFF)
ForceDeployEntry(Ethan,0x2)
ForceDeployEntry(Quentin,0x5)
ForceDeployEntry(Thomas,0x5)
ForceDeployEntry(Rose,0x6)
EndForceDeploy


// 7743 ASMC2 start button fix
PUSH
ORG 0xDB26
BYTE 0x00 0x00
POP

// https://github.com/FireEmblemUniverse/SkillSystem_FE8/blob/master/EngineHacks/Necessary/ModularStatScreen/asm/Write_Growths_To_Battle_Struct.asm
// line 59 Check_Event_ID
/*
83DA8: (Check_Event_ID) (FE7: 798F8)
Params: r0=event id to check
Returns: True if event id is set
*/

// Circles, edited by Vesly and Pawkkie
// Inventory full doesn't seem to work, making a workaround
//#include "PreventTrade/Installer.event"

// Snek get unit by deploy slot (currently unused)
ALIGN 4
GetUnitInDeploySlotHack:
#incbin "Misc/GetUnitByDeployOrder.dmp"

// 7743 patches
ALIGN 4
Set_Status_Hack:
#incbin "BuilderPatches/set_status_param.dmp"

ALIGN 4
Set_All_Status_Hack:
#incbin "BuilderPatches/set_status_param_all.dmp"

ALIGN 4
SilentGiveItemASMC:
#incbin "BuilderPatches/SilentGiveItem.dmp"


// Phantom Sentine group AI hack
#include "GroupAI/GroupAI.event"

// Stan's difficulty selection disabler
{

PUSH; ORG 0xA20164
    POIN (prFixedDifficulty+1)
POP

ALIGN 4
prFixedDifficulty:
    SHORT (0x2200 | 2) // Difficulty: 0 for easy, 1 for normal, 2 for hard
    SHORT 0x2300
    SHORT 0x212A
    SHORT 0x5442
    SHORT 0x213D
    SHORT 0x5443
    SHORT 0x4770
    ALIGN 4
}

// hypergammaspaces's AI lag fix
#include "AILagFIx/FillAIDangerMap.event"

// Vesly AI speed improvement
#include "DecideOnDangerMap/DecideOnDangerMap.event"

// Snek Ex.Map fix
PUSH
ORG $96B1C
SHORT 0xE00A // Eliminate "Tower" in prep screens
ORG $96B3A
SHORT 0xE003 // Eliminate "Ruins" in prep screens
ORG $96B4C
SHORT 0xE003 // Eliminate "Ex.map" in prep screens
POP

// Rogue AI change to Thief_F (Pikmin1211)
PUSH
ORG 0x40C6A 
BYTE 0x54
POP

// 5x restrictions (leonarth)
PUSH; ORG $31650; SHORT 0x46C0; POP

// 5x money (circles, self randomizing rom)
PUSH; ORG $24df2; SHORT 0; POP //fix 5x money


// Sme's status weapons (only using duration change here)
/*
To install, just #include StatusWeapons.event and add Proc_StatusWeapons to the proc skills loop.
To make a weapon a status weapon, just give it weapon effect 0xD and put the ID of the status you wish to inflict at item data +0x22
(the second unused byte at the end of each table entry, the same one used by Item Effect Revamp). Statuses applied during battles are hardcoded to always last 5 turns;
if you want to change this amount, the byte at 0x178EA is the duration shifted 4 bits left (the default value is 0x50 which equates to 5 turns, 0x30 would equate to 3 turns, etc).
*/
// Seems to be 0x20 not 0x22

// Change duration to 1
PUSH
ORG 0x178EA
BYTE 0x10
POP

// Sme item specific WTA
// TODO: re add
#include "ItemSpecificWTA/ItemSpecificWTA.event"

//Sets Vulnerary HP Recovery to 15hp. (LegendOfLoog)
PUSH
ORG 0x2FEC6
BYTE 0x0F
POP


// Prep screen shop (copied from runa)

PUSH
  ORG 0x99E64
    POIN PrepScreenShop
POP

ALIGN 4
PrepScreenShop:
SHLI IronSword SteelSword IronBlade SteelBlade FireSword IronLance SteelLance Javelin IronAxe SteelAxe HandAxe IronBow SteelBow Fire Thunder Flux EvilEye Heal
ALIGN 4

//Fix MNC2 Freezing glitch (breaks skirmishes!)
// Kirb, probably?
PUSH
ORG $BD070
SHORT $E0B8
ORG $897B2
SHORT $0 $0
ORG $897C4
SHORT $200E $5620
POP

// Zane's MMB
// TODO: why is this busted?
//#include "MMB/Installers/MMBInstallerBpat.event"
//#include "MMB/Installers/MMBInstallerBpat2.event"
//#include "MMB/Installers/MMBInstallerBpat3.event" // Version with skills
//#include "MMB/Installers/MMBInstallerBpatContro.event"
#include "MMB/Installers/MMBInstallerBpatContro2.event"

// My prep screen price fix (help from colorz's code)
PUSH
ORG 0xB523C
SHORT 0x00 0x00
POP

// Teq
PUSH
#include "WalkingSoundsFix/FE8-Walking Sounds EA.txt"
POP

// Teq's CHAI fix
//#include "Misc/FE8-New_CHAI_EA.event"

// Gamma CHAI fix fix
ALIGN 4
New_CHAI:
#incbin "CHAIFix/New_CHAI.dmp"
PUSH
ORG $10644
replaceWithHack(New_CHAI)
POP

// 2WB portrait height fix
PUSH
#include "PortraitHeightFix/Portrait Shift Table (Download this one).txt"
POP

// Thracia trade
PUSH
  ORG $22F50
  BYTE 0xC0 0x46
POP

// Change thief and boss bonus exp
PUSH
  ORG $2C3EE
  BYTE 0x00
  ORG $2C3FA
  BYTE 0x14
POP

// Pik mag/3 range modified to fixed range
PUSH
ORG $18A1C
jumpToHack(GetUnitFixedRange)
POP

ALIGN 4
GetUnitFixedRange:
#incbin "Misc/ReplaceMag2Range.dmp"


// Pik send items to convoy upon death
#include "SendItems/Installer.event"

// Teq heal display
		#ifndef FreeSpace
			#define FreeSpace 0xB2B200
			ORG FreeSpace
		#endif
		#define Arrow_Text_ID 0x8EA //currently just a hyphen; make a text id with '->' and put it here (DON'T CHANGE THE VANILLA ONE)
		
		#include "Extensions/Hack Installation.txt"
		
		PUSH
		
		ORG $24670
		jumpToHack(FE8_Show_Heal_Amount)
		
		POP
		
		ALIGN 4
		FE8_Show_Heal_Amount:
		#incbin "Misc/FE8-Show Heal Amount.dmp"
		WORD Arrow_Text_ID


// Target allies or enemies (IER thing? TODO: figure this out. 90% sure this is berserk routine)
PUSH
ORG 0x261B2
SHORT 0x0
POP

// Freeze text pointer
// Changes text ptr from 0x55A -> 0x55B, don't remember why this matters?
// 0x88A2C has function

PUSH
ORG 0x88A78
WORD 0x08088AEC
POP


// CHAX

// Freeze, no AS / def / res changes for petrify

PUSH
ORG $2adcc
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN ComputeBattleUnitSpecialWeaponStats
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;ComputeBattleUnitSpecialWeaponStats:
POP
WORD $B5700003 $4334A $4B1E8818 $F000000D $2803F83B $2313D110 $330156EB $D100105B $223301 $8013325A $2300002A $8013325C $32660022 $80938013 $39B6CE3 $2BD503 $335C2200 $2B801A $3330220F $4013781B $D1022B09 $18622164 $228011 $3230210F $400A7812 $D1022A09 $325B3564 $22FD802A $42133B0B $2364D102 $80233464 $BC01BC70 $46C04700 $8017725 $46C04718
//WORD $B5700003 $4334A $4B238818 $F000000D $2803F845 $2313D110 $330156EB $D100105B $223301 $8013325A $2300002A $8013325C $32660022 $80938013 $39B6CE3 $2BD503 $335C2200 $2B801A $3330220F $4013781B $D1022B09 $18622164 $228011 $3230210F $400A7812 $D1022A09 $325B3564 $22FD802A $42133B0B $23D10C $33643A99 $22801A $8813325A $80133B0A $8823345E $8023331E $BC01BC70 $46C04700 $8017725 $46C04718

// Referencing Contro's menu work
//#include "ChapterMenu/ChapterMenu.event"
//#include "FE8_ChapterJump/ChapterJump.event"

// Light rune duration
/*
PUSH
ORG $2e2e0
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddDamagingTrap
POP
PUSH
ORG $2e470
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN RefreshAllLightRunes
POP
PUSH
ORG $2ea58
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddLightRune
POP
PUSH
ORG $2eac0
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN DecayTraps
POP
PUSH
ORG $2eb50
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN EnableAllLightRunes
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;AddDamagingTrap:
ORG CURRENTOFFSET+$24;AddLightRune:
ORG CURRENTOFFSET+$30;RefreshAllLightRunes:
ORG CURRENTOFFSET+$38;EnableAllLightRunes:
ORG CURRENTOFFSET+$c;DecayTraps:
POP
WORD $4C07B510 $F869F000 $61B9B02 $7103161B $71839A03 $71429B04 $BC1071C3 $4708BC02 $802E2B9 $4E09B5F8 $8D6833 $4F08595B $5C1B220D $F0000004 $2301F851 $7183222E $595B6833 $BCF8551A $4708BC02 $202E4DC $802E2B9 $B5702000 $F0004B0A $212EF83D $78834A09 $D1022B00 $BC01BC70 $2B0D4700 $7843D105 $9B6815 $595B7804 $30085519 $46C0E7EF $802EB8D $202E4DC $F7FFB510 $BC10FFE1 $4700BC01 $2000B510 $F0004B0C $4F81B $2B0078A3 $BC10D102 $4700BC01 $D10A2B0A $3B0178E3 $E1B061B $D10470E3 $4B040020 $F808F000 $34083C08 $46C0E7EA $802EB8D $802E2FD $47204718 $46C04738
*/

/*
PUSH
ORG $2e314
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddFireTile
POP
PUSH
ORG $2e470
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN RefreshAllLightRunes
POP
PUSH
ORG $2ea58
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddLightRune
POP
PUSH
ORG $2eac0
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN DecayTraps
POP
PUSH
ORG $2eb50
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN EnableAllLightRunes
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;sub_8036364:
ORG CURRENTOFFSET+$108;sub_8036474:
ORG CURRENTOFFSET+$6c;AddFireTile:
ORG CURRENTOFFSET+$20;AddLightRune:
ORG CURRENTOFFSET+$30;RefreshAllLightRunes:
ORG CURRENTOFFSET+$38;EnableAllLightRunes:
ORG CURRENTOFFSET+$c;DecayTraps:
POP
WORD $6B570 $5364C $5EF02300 $F0004B33 $4F91B $56202002 $D1422800 $286778E0 $2863D807 $2806D810 $2807D034 $2804D02B $8833D017 $80333301 $282100 $F0004B28 $BC70F903 $4700BC01 $21002201 $56A23865 $23035661 $28024C23
SHORT $D80D
SHORT ((__gnu_thumb1_case_uqi-4-CURRENTOFFSET>>12)&$7FF)|$F000 ((__gnu_thumb1_case_uqi-4-CURRENTOFFSET>>1)&$7FF)|$F800
SHORT $100B
WORD $22010012 $282100 $566156A2 $F0004B1E $E7DEF8EB $282302 $F8E7F000 $2300E7D9 $2301E7F9 $2100E7F7 $56610028 $F0004B17 $E7CEF8DB $21002201 $56A20028 $4B145661 $4D14E7E5 $E000600 $78E37328 $756B4E12 $F8CCF000 $F0004B11 $7D6BF8C7 $2B057B28 $F000D806 $78E1F8C3 $F0004B0D $E7B8F8BD $F8BCF000 $4B0B78E1 $46C0E7F7 $804FD35 $8002F25
POIN StartGasTrapAnim
POIN StartFireTrapAnim
POIN StartArrowTrapAnim
POIN StartShowMapChangeAnim
WORD $203A958 $8019431 $802810D
POIN sub_803584C
WORD $803592D $7B5F8 $5374C $5EF82300 $F0004B12 $6F897 $4B112002 $F0005630 $78F3F891 $4E0F0004 $2B03425A $2301D813 $280021 $F888F000 $4B0B0020 $F882F000 $DC022800 $F0004B09 $883BF87D $803B3301 $BC01BCF8 $23014700 $E7E9425B $804FD35 $8019431 $80357A9 $8019151 $80271A1 $2405B51F $93019402 $23009200 $4C032204 $F861F000 $BC01BC1F $46C04700 $802E2E1 $4E09B5F8 $8D6833 $4F08595B $5C1B220D $F0000004 $2301F852 $7183222E $595B6833 $BCF8551A $4708BC02 $202E4DC $802E2B9 $B5702000 $F0004B0A $212EF83D $78834A09 $D1022B00 $BC01BC70 $2B0D4700 $7843D105 $9B6815 $595B7804 $30085519 $46C0E7EF $802EB8D $202E4DC $F7FFB510 $BC10FFE1 $4700BC01 $2000B510 $F0004B0C $4F81B $2B0078A3 $BC10D102 $4700BC01 $D10A2B0A $3B0178E3 $E1B061B $D10470E3 $4B040020 $F808F000 $34083C08 $46C0E7EA $802EB8D $802E2FD $47204718 $47384730
*/


PUSH
ORG $2e470
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN RefreshAllLightRunes
POP
PUSH
ORG $2ea58
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddLightRune
POP
PUSH
ORG $2eac0
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN DecayTraps
POP
PUSH
ORG $2eb50
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN EnableAllLightRunes
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;AddLightRune:
ORG CURRENTOFFSET+$30;RefreshAllLightRunes:
ORG CURRENTOFFSET+$38;EnableAllLightRunes:
ORG CURRENTOFFSET+$c;DecayTraps:
POP
WORD $4E09B5F8 $8D6833 $4F08595B $5C1B220D $F0000004 $2301F850 $7183222E $595B6833 $BCF8551A $4708BC02 $202E4DC $802E2B9 $B5702000 $F0004B0A $212EF83D $78834A09 $D1022B00 $BC01BC70 $2B0D4700 $7843D105 $9B6815 $595B7804 $30085519 $46C0E7EF $802EB8D $202E4DC $F7FFB510 $BC10FFE1 $4700BC01 $2000B510 $F0004B0C $4F81B $2B0078A3 $BC10D102 $4700BC01 $D10A2B0A $3B0178E3 $E1B061B $D10470E3 $4B040020 $F808F000 $34083C08 $46C0E7EA $802EB8D $802E2FD $47384718


/*
PUSH
ORG $2ea58
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN AddLightRune
POP
PUSH
ORG $2eac0
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN DecayTraps
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;AddLightRune:
ORG CURRENTOFFSET+$30;DecayTraps:
POP
WORD $4E09B5F8 $8D6833 $4F08595B $5C1B220D $F0000004 $2301F82E $71832200 $595B6833 $BCF8551A $4708BC02 $202E4DC $802E2B9 $2000B510 $F0004B0C $4F81B $2B0078A3 $BC10D102 $4700BC01 $D10A2B0A $3B0178E3 $E1B061B $D10470E3 $4B040020 $F808F000 $34083C08 $46C0E7EA $802EB8D $802E2FD $47384718
*/

// Acrobat (doesn't work)
/*
ALIGN 4
gAcrobatId:
BYTE AcrobatID

PUSH
ORG $1a4cc
ALIGN 4
WORD $46C04778 $E59FC000 $E12FFF1C
POIN SetWorkingMoveCosts
POP
ALIGN 4
PUSH
ORG CURRENTOFFSET+$1;SetWorkingMoveCosts:
POP
WORD $B5704B0F $68180004 $D1002800 $4B0D0010 $4B0D7819 $F81CF000 $1E432601 $23004198 $682A4D0A $18D256E1 $DD022900 $D0002800 $33010031 $2B417011 $BC70D1F3 $4700BC01 $3004E50
POIN gAcrobatId
POIN SkillTester
WORD $3004BB0 $46C04718
ALIGN 4
PUSH
ORG CURRENTOFFSET+$0;TERRAIN_COUNT:
POP
BYTE $41
*/

